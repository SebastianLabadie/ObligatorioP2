@model IEnumerable<Dominio.Servicio>

@{
    ViewData["Title"] = "Servicios por Plato";
}

<h1>Mis Servicios por Plato</h1>


<form method="post" id="formBuscarServicios">
    <select name="pId" id="slcPlatos">
        @foreach (var plato in ViewBag.platos)
        {
            <option value="@plato.Id"> @plato.Nombre </option>
        }
    </select>
    <input type="submit" value="Buscar" />
</form>


@if (Model.Count() > 0)
{

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    Tipo
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estado)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Fecha)
                </th>
                <th>
                    Costo Final
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @item.GetType().Name
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Estado)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Fecha)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PrecioFinal)

                    </td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No hay servicios para ser listados.</p>
}




@section scripts{

    <script>

        document.querySelector("#formBuscarServicios").addEventListener('submit', validarDatos);

        function validarDatos(evento) {

            evento.preventDefault();

            let platoId = parseInt(document.querySelector("#slcPlatos").value);

            if (platoId > 0) {
                this.submit();
            } else {
                const notyf = new Notyf();
                notyf.error({
                    message: "Error: Distancia a Restaurante No puede ser vacio, Direccion de Envio no puede ser vacio o Seleccione Repartidor",
                    duration: 3500,
                    position: {
                        x: 'right',
                        y: 'top',
                    },
                })
            }

        }
    </script>
}